@tailwind base;
@tailwind components;
@tailwind utilities;

/* AI Image Analyzer Design System - Purple-Blue Gradient Theme */

@layer base {
  :root {
    /* Base colors */
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;

    /* Card system with glass effects */
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;

    /* AI Purple-Blue brand colors */
    --primary: 262 83% 58%;
    --primary-foreground: 0 0% 98%;
    --primary-glow: 262 83% 70%;

    --secondary: 217 91% 60%;
    --secondary-foreground: 0 0% 98%;

    /* Feature button colors */
    --feature-orange: 25 95% 53%;
    --feature-orange-glow: 25 95% 65%;
    --feature-green: 142 71% 45%;
    --feature-green-glow: 142 71% 57%;
    --feature-blue: 217 91% 60%;
    --feature-blue-glow: 217 91% 72%;
    --feature-purple: 262 83% 58%;
    --feature-purple-glow: 262 83% 70%;

    /* Glass morphism */
    --glass: 240 10% 15%;
    --glass-border: 240 3.7% 25.9%;
    --glass-foreground: 0 0% 98%;

    /* Muted colors */
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;

    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;

    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 262 83% 58%;

    --radius: 0.75rem;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--secondary)));
    --gradient-glass: linear-gradient(135deg, hsl(var(--glass) / 0.8), hsl(var(--glass) / 0.4));
    --gradient-glow: radial-gradient(600px at 50% 50%, hsl(var(--primary) / 0.15), transparent);

    /* Shadows and glows */
    --shadow-glow: 0 0 40px hsl(var(--primary-glow) / 0.4);
    --shadow-card: 0 8px 32px hsl(240 10% 3.9% / 0.32);
    --shadow-feature: 0 4px 20px hsl(var(--primary) / 0.3);

    /* Animations */
    --transition-glow: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-smooth: all 0.2s ease-out;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    background: var(--gradient-glow), hsl(var(--background));
    background-attachment: fixed;
  }

  /* Glass morphism utilities */
  .glass {
    @apply backdrop-blur-lg bg-glass/80 border border-glass-border/30;
  }

  .glass-card {
    @apply glass rounded-lg shadow-card;
  }

  /* Feature button variants */
  .feature-orange {
    @apply bg-gradient-to-r from-feature-orange to-feature-orange-glow;
    box-shadow: var(--shadow-feature);
  }

  .feature-green {
    @apply bg-gradient-to-r from-feature-green to-feature-green-glow;
    box-shadow: var(--shadow-feature);
  }

  .feature-blue {
    @apply bg-gradient-to-r from-feature-blue to-feature-blue-glow;
    box-shadow: var(--shadow-feature);
  }

  .feature-purple {
    @apply bg-gradient-to-r from-feature-purple to-feature-purple-glow;
    box-shadow: var(--shadow-feature);
  }

  /* Glow animations */
  .glow-primary {
    transition: var(--transition-glow);
  }

  .glow-primary:hover {
    box-shadow: var(--shadow-glow);
    transform: translateY(-1px);
  }

  /* Upload area styles */
  .upload-area {
    @apply glass-card border-dashed border-2 border-primary/30 transition-all duration-300;
  }

  .upload-area.dragover {
    @apply border-primary bg-primary/10;
    box-shadow: 0 0 20px hsl(var(--primary) / 0.3);
  }

  /* Canvas styles for object detection */
  .canvas-overlay {
    @apply absolute top-0 left-0 pointer-events-none;
  }

  /* Results animation */
  .fade-in {
    animation: fadeIn 0.5s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Loading spinner */
  .spinner {
    animation: spin 1s linear infinite;
  }

  /* Scale-in animation */
  .scale-in { animation: scaleIn 0.35s ease-out; }
  @keyframes scaleIn {
    0% { transform: scale(0.92); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
}